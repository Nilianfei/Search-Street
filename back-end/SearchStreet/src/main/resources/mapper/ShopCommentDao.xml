<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.graduation.ss.dao.ShopCommentDao">
	<select id="queryShopCommentList" resultType="com.graduation.ss.entity.ShopComment">
		SELECT
		shop_comment_id,shop_id,user_id,comment_content,service_rating,star_rating
		FROM
		tb_shop_comment
		<where>
			<if test="shopCommentCondition.userId != null">
				and user_id = #{shopCommentCondition.userId }
			</if>
			<if
				test="shopCommentCondition.shopId != null">
				and shop_id = #{shopCommentCondition.shopId}
			</if> 
			<if
				test="shopCommentCondition.commentContent != null">
				and comment_content like '%${shopCommentCondition.commentContent}%'
			</if> 
		</where>
		LIMIT #{rowIndex},#{pageSize};
	</select>
	<select id="queryShopCommentCount" resultType="int">
		SELECT
		count(1)
		FROM
		tb_shop_comment
		<where>
			<if test="shopCommentCondition.userId != null">
				and user_id = #{shopCommentCondition.userId }
			</if>
			<if
				test="shopCommentCondition.shopId != null">
				and shop_id = #{shopCommentCondition.shopId}
			</if> 
		</where>
	</select>
	<insert id="insertShopComment" parameterType="com.graduation.ss.entity.ShopComment"
		useGeneratedKeys="true" keyProperty="shopCommentId" keyColumn="shop_comment_id">
		INSERT
		INTO
		tb_shop_comment(shop_id,user_id,comment_content,service_rating,star_rating)
		VALUES
		(#{shopId},#{userId},#{commentContent},
		#{serviceRating},#{starRating})
	</insert>
	<insert id="insertShopCommentInfo" parameterType="java.util.List"
		useGeneratedKeys="true" keyProperty="shopCommentId" keyColumn="shop_comment_id">
		INSERT
		INTO 
		tb_shop_comment(shop_id,user_id,comment_content,service_rating,star_rating)
		VALUES
		<foreach collection="list" item="shopCommentInfoDTO" index="index"
			separator=",">
			(
			#{shopCommentInfoDTO.shopId},
			#{shopCommentInfoDTO.userId},
			#{shopCommentInfoDTO.commentContent},
			#{shopCommentInfoDTO.serviceRating},
			#{shopCommentInfoDTO.starRating}
			)
		</foreach>
	</insert>
	
	<update id="updateShopComment" parameterType="com.graduation.ss.entity.ShopComment">
		update tb_shop_comment
		<set>
            <if test="shopId != null">shop_id=#{shopId},</if>
			<if test="userId != null">user_id=#{userId},</if>
			<if test="commentContent != null">comment_content=#{commentContent},</if>
			<if test="serviceRating != null">service_rating=#{serviceRating},</if>
			<if test="starRating!=null">star_rating=#{starRating}</if>	
		</set>
		where shop_comment_id=#{shopCommentId}
	</update>
	<delete id="deleteShopComment">
        delete from tb_shop_comment where shop_comment_id=#{shopCommentId}
    </delete>
	<select id="queryByShopCommentId" resultType="com.graduation.ss.entity.ShopComment" parameterType="Long">
		SELECT
		shop_id,user_id,comment_content,service_rating,star_rating
		FROM
		tb_shop_comment
		WHERE
		shop_comment_id=#{shopCommentId}
	</select>
</mapper>